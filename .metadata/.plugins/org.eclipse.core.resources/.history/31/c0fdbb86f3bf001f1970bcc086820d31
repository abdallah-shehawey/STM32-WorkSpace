/*
 * ISA.c
 *  Created on: Jul 28, 2024
 *      Author: Mega
 */
#include <avr/io.h>
#define F_CPU 8000000UL
#include <util/delay.h>

const unsigned char Seg_Num[10] = {
    ~0x3F, // 0
    ~0x06, // 1
    ~0x5B, // 2
    ~0x4F, // 3
    ~0x66, // 4
    ~0x6D, // 5
    ~0x7D, // 6
    ~0x07, // 7
    ~0x7F, // 8
    ~0x6F  // 9
};
unsigned char OP, OP1, OP2, Result, port_value;


void display_number(unsigned char number)
{
  unsigned char digit1= number / 10;
  unsigned char digit2 = number % 10;

  PORTB = Seg_Num[digit1];
  PORTC = 0b00000001;
  _delay_ms(1);
  PORTC = 0x00;

  PORTB = Seg_Num[digit2];
  PORTC = 0b00000010;
  _delay_ms(1);
  PORTC = 0x00;
}

int main()
{
  DDRA  = 0x00;
  PORTA = 0xFF;
  DDRB  = 0xFF;
  DDRC  = 0xFF;
  while (1)
  {
    while (1)
    {
      //Read all bins
      port_value = ~PINA;
      PORTD = ~PINA;
      //INST Format
      OP   = ((port_value & (1 << 7)) | (port_value & (1 << 6))) >> 6;
      OP1 = ((port_value & (1 << 5)) | (port_value & (1 << 4)) |(port_value & (1 << 3)) ) >> 3;
      OP2 = ((port_value & (1 << 2)) | (port_value & (1 << 1)) |(port_value & (1 << 0)));
      //Check operation
      if (OP == 0)
      {
        Result = OP1 + OP2;
      }
      else if (OP == 1)
      {
        Result = OP1 - OP2;
      }
      else if (OP == 2)
      {
        Result = OP1 * OP2;
      }
      else
      {
        Result = OP1 / OP2;
      }
      display_number(Result);
    }

  }
}

